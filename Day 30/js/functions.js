
let holes = document.querySelectorAll('.hole');
let scoreBoard = document.querySelector('.score');
let moles = document.querySelectorAll('.mole');
let button = document.querySelector('.btn');
let textbox = document.querySelector('input[type=text]');
let lastHole = 0;
let timeUp = false;

function randomTime(min, max) { // random number between two values
  return Math.round(Math.random() * (max - min) + min);
}

function randomHole() {
  let index = Math.floor(Math.random() * holes.length);

  while (index === lastHole)
    index = Math.floor(Math.random() * holes.length);

  lastHole = index;
  return holes[index];
}

function moleUp() {
  let time = randomTime(200, 1200);
  let hole = randomHole();

  hole.classList.add('up');
  setTimeout(() => {
    if (!timeUp) moleUp();
    hole.classList.remove('up');
  }, time);
}

function upgradeScore() {
  scoreBoard.innerHTML = parseInt(scoreBoard.innerHTML) + 1;
}

function moleClick(e) {
 // The isTrusted read-only property of the Event interface is a boolean that is true when the event was generated by a user action, and false when the event was created or modified by a script or dispatched via dispatchEvent. HAIL MDN
  if (!e.isTrusted) return;
  upgradeScore();
  this.classList.remove('up');
}

function startGame() {
  let time = parseInt(textbox.value) * 1000 || 10000;

  timeUp = false;
  scoreBoard.innerHTML = '0';
  setTimeout(() => {
    timeUp = true;
  }, time);
  moleUp();
}

function bodyKeyDown(e) {
  if (e.keyCode === 13)
    startGame();
}

button.addEventListener('click', startGame);
moles.forEach(mole => mole.addEventListener('click', moleClick))
document.body.addEventListener('keydown', bodyKeyDown);
